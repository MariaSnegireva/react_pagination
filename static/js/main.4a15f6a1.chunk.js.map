{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageCount","pages","itemsArr","i","resultItem","push","className","cn","disabled","href","onClick","map","page","active","length","item","App","valueSelector","useState","selectorValue","setSelectorValue","setCurrentPage","lastItem","id","defaultValue","onChange","event","Number","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a15f6a1.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  let pageCount = 0;\n  const pages: number[] = [];\n  const itemsArr: number[] = [];\n\n  for (let i = 1; i <= perPage; i += 1) {\n    const resultItem = i + perPage * (currentPage - 1);\n\n    itemsArr.push(resultItem);\n  }\n\n  for (let i = total; i > 0; i -= perPage) {\n    pageCount += 1;\n    pages.push(pageCount);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n        >\n          {currentPage === 1 ? (\n            <a\n              data-cy=\"prevLink\"\n              className=\"page-link\"\n              href=\"#prev\"\n              aria-disabled=\"true\"\n            >\n              «\n            </a>\n          ) : (\n            <a\n              data-cy=\"prevLink\"\n              className=\"page-link\"\n              href=\"#prev\"\n              aria-disabled=\"false\"\n              onClick={() => {\n                onPageChange(currentPage - 1);\n              }}\n            >\n              «\n            </a>\n          )}\n        </li>\n        {pages.map(page => (\n          <li\n            className={cn('page-item', {\n              active: currentPage === page,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                if (currentPage !== page) {\n                  onPageChange(page);\n                }\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === pages[pages.length - 1],\n          })}\n        >\n          {currentPage !== pages[pages.length - 1] ? (\n            <a\n              data-cy=\"nextLink\"\n              className=\"page-link\"\n              href=\"#next\"\n              aria-disabled=\"false\"\n              onClick={() => {\n                onPageChange(currentPage + 1);\n              }}\n            >\n              »\n            </a>\n          ) : (\n            <a\n              data-cy=\"nextLink\"\n              className=\"page-link\"\n              href=\"#next\"\n              aria-disabled=\"true\"\n            >\n              »\n            </a>\n          )}\n        </li>\n      </ul>\n      <ul>\n        {itemsArr.map(item => (\n          item <= total && (\n            <li data-cy=\"item\" key={item}>\n              {`Item ${item}`}\n            </li>\n          )\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const itemsCount = 42;\n  let pageCount = 0;\n  const valueSelector: number[] = [3, 5, 10, 20];\n  const [selectorValue, setSelectorValue] = useState(valueSelector[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pages: number[] = [];\n  const itemsArr: number[] = [];\n\n  for (let i = 1; i <= selectorValue; i += 1) {\n    const resultItem = i + selectorValue * (currentPage - 1);\n\n    itemsArr.push(resultItem);\n  }\n\n  const lastItem = itemsArr[itemsArr.length - 1] <= itemsCount\n    ? itemsArr[itemsArr.length - 1] : itemsCount;\n\n  for (let i = itemsCount; i > 0; i -= selectorValue) {\n    pageCount += 1;\n    pages.push(pageCount);\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectorValue(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsArr[0]} - ${lastItem} of ${itemsCount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={valueSelector[1]}\n            onChange={handleChange}\n\n          >\n            {valueSelector.map(value => (\n              <option value={value}>\n                {value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsCount}\n        perPage={selectorValue}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}